apiVersion: v1
kind: Template
labels:
  template: ui-deployment
metadata:
  annotations:
    description: Deploys the UI Image
    iconClass: icon-java
    tags: java
  name: ui-deployment
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: UI Port.
    labels:
      application: ${APPLICATION_NAME}
      deploymentConfig: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      application: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${APPLICATION_HOSTNAME}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
      deploymentConfig: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      application: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: SPRING_PROFILES_ACTIVE
            value: ${SPRING_PROFILE}
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                name: "${MONGODB_SERVICE}"
                key: database-user
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${MONGODB_SERVICE}"
                key: database-password
          - name: MONGODB_DATABASE
            valueFrom:
              secretKeyRef:
                name: "${MONGODB_SERVICE}"
                key: database-name
          image: ''
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: ui
- description: The name for the Mongodb Service.
  name: MONGODB_SERVICE
  required: true
- description: 'Custom hostname for the service route.  Leave blank for
    default hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
  displayName: Application route hostname.
  name: APPLICATION_HOSTNAME
- description: Active Spring Profile
  displayName: Spring Profile
  required: true
  value: openshift
  name: SPRING_PROFILE